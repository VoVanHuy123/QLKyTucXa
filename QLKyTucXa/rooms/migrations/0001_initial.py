# Generated by Django 5.1.7 on 2025-06-06 10:28

import django.db.models.deletion
import django_mysql.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('building_name', models.CharField(max_length=50, unique=True)),
                ('total_floors', models.IntegerField()),
            ],
            options={
                'db_table': 'building',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('room_number', models.CharField(max_length=10, unique=True)),
                ('room_type', models.CharField(max_length=50, null=True)),
                ('floor', models.IntegerField(null=True)),
                ('total_beds', models.IntegerField()),
                ('available_beds', models.IntegerField()),
                ('status', django_mysql.models.EnumField(choices=[('Empty', 'Empty'), ('Full', 'Full')], default='Empty')),
                ('monthly_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='rooms.building')),
            ],
            options={
                'db_table': 'room',
            },
        ),
        migrations.CreateModel(
            name='RoomChangeRequests',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('reason', models.CharField(max_length=500)),
                ('status', django_mysql.models.EnumField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending')),
                ('current_room', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='current_room', to='rooms.room')),
                ('requested_room', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='requested_room', to='rooms.room')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='account.student')),
            ],
            options={
                'db_table': 'room_change_requests',
            },
        ),
        migrations.CreateModel(
            name='RoomAssignments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('bed_number', models.IntegerField(null=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='room_assignments', to='rooms.room')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='room_assignments', to='account.student')),
            ],
            options={
                'db_table': 'room_assignments',
                'constraints': [models.UniqueConstraint(fields=('student', 'room', 'active'), name='unique_student_room_date')],
            },
        ),
    ]
